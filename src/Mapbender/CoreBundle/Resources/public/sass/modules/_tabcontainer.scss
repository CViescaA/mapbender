.tabContainer{
  $tabPopHeight:3px;
  $tabHeight:34px;

  .tab{
    margin-right:3px;
    color:$middleFontColor;
    background-color:$contentColor;
    cursor:pointer;
    height:$tabHeight;
    z-index:10;
    border:{
      left:solid 1px $thirdColor;
      top:solid 1px $thirdColor;
      right:solid 1px $thirdColor;
    }
    float:left;
    padding:3px 10px 3px 10px;
    position:relative;
    bottom:-$tabPopHeight*2;
    @extend .smallText;
    user-select: none;

    &:hover{bottom:-$tabPopHeight;}

    &.active{
      cursor:default;
      color:$darkFontColor;
      bottom:-$tabPopHeight;
      z-index: 30;
    }
  }
  .container{
    clear:left;
    display:none;
    padding:$space;
    z-index:20;
    position:relative;
    background-color:$contentColor;
    border:{
      top:solid 3px $thirdColor;
      left:solid 1px $thirdColor;
      right:solid 1px $thirdColor;
      bottom:solid 1px $thirdColor;
    }
    &.active{display:block;}
  }
}

.tabContainerAlt{
  .tab{
    display: inline-block;
    @extend .button;

    &.active{
      cursor:default;
      background-color:darken($buttonFirstColor, 10%);
      color:$lightFontColor;
    }
    a {
      color:inherit;
    }
  }
  .container{
    border-top:dashed 1px $thirdColor;
    margin-top:$space;
    clear:left;
    display:none;
    padding: 0px;
    padding-top:$space;
    padding-bottom:$space;
    z-index:20;
    position:relative;
    width: 100%;
    &.active{display:block;}
  }
}

.accordionContainer {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
    
  .accordion{
    user-select: none;
    flex: 0 0 auto; // fixed size
    cursor: pointer;
    @extend .buttonColors;
    /* background-color: $buttonFirstColor; */
    >div{
      background-color: inherit;
      padding-left: 0.5em;
    }
    &.active{
      background-color:darken($buttonFirstColor, 10%);
      color:$lightFontColor;
    }
  }
  .container-accordion {
    flex: 1 1 auto; // grow and shrink
    &:not(.active) {
      display: none;
    }
    width:100%;
    overflow-y: auto;
    overflow-x: hidden;
    position: relative;
    .accordion-cell {
      // Extend content to fill entire accordion cell; this is a Hack helping nested absolte-positioned
      // content from overflowing natural size and creating a scrollbar (e.g. Layertree context menu)
      width: 100%;
      position: absolute;
      top: 0;
      bottom: 0;
      padding-top: $space / 2;
    }
  }
  // spacing between consecutive content blocks
  .container-accordion + .accordion {
    margin-top: 2px;
  }
}
