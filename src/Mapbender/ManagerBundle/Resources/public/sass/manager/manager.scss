/* Backend styles include used by main backend and login */

@import "modules/base";
@import "modules/text";
@import "modules/layout";
@import "modules/popup";
@import "modules/input";
@import "modules/button";
@import "modules/container";
@import "modules/tabcontainer";
@import "modules/checkbox";
@import "modules/radiobutton";
@import "modules/dropdown";
@import "modules/table";
@import "modules/popup_dialog";
@import "element/mbslider";


@import url("components/open-sans/open-sans.css");
@import url("components/bootstrap/css/bootstrap.min.css");


$bannerHeight: 170px;
$contentPaneWidth: 800px;
$navWidth: 200px;
$pageWidth: $contentPaneWidth + $navWidth;

.navigation {
  color: $middleFontColor;
}

.navigation {
  .navItem {
    > a {
      display: block;
      @include transition(color 0.3s linear);
      // separate text from built-in icon
      &.iconLinkButton:before {
        margin-right:5px;
      }
    }
    &:hover, &:focus {
      color: darken($middleFontColor, 12%);
    }
    &.activeItem {
      > a:before {
        color: $ciColor;
      }
      color: darken($middleFontColor, 24%);
      &:hover, &:focus {
        color: darken($middleFontColor, 36%);
      }
    }
  }
}

div.contentTitle {
  // remove h1 margin, put it on the containing div instead
  margin-bottom: 2rem;
  > h1 {
    margin: 0;
  }
  // @todo: allow regular paragraph text flow ... everywhere?
  > p {
    margin: 0.5em 0;
  }
}


// ------------------------------------------------------------------------ PAGE
.page{
  top:-$bannerHeight;
  margin: 0 auto;
  width:$pageWidth;
}
.popupContainer,
.page{
  position:relative;
  @media (min-width: 992px){
    .container {
      width: auto;
    }
  }
  @media (min-width: 768px){
    .container {
      width: auto;
    }
  }

  // Overrule Bootstrap (very specific selectors) on padding top / bottom
  // Keep left / right padding (8px from Bootstrap .table rules)
  .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
    border-top: none;
    padding-top: $space/4;
    padding-bottom: $space/4;
  }
}
.iconBig, .iconSmall {
  // Add highlights for legacy markup (.iconSmall = no other rules, FOM only)
  &:before {
    @extend .hover-highlight-effect;
  }
}

.notifyjs-corner {
  z-index: 100000 !important;
}


// -------------------------------------------------------------------- PAGE TOP
.head{
  position: relative;
  height:$bannerHeight;

  // remove broken head background when the page is smaller than defined width
  min-width:$pageWidth;
  border-top:solid 5px darken($firstColor, 10%);
  @include background(linear-gradient(rgba(255,255,255,.1),
                                      rgba(255,255,255,0)),
                      url($headPatternUrl));
  .dekoSeperator {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 6px;
    border:none;
    outline:none;
    border-bottom:solid 1px $firstColor;
    background:url($imageBasePath + "/line.png");
  }
}

.account-bar-wrap {
  float: right;
}
.sitelinks {
  li {
    display: inline-block;
  }
}

// ------------------------------------------------------------------- PAGE LEFT
.leftPane{
  width:$navWidth;

  .navigation {
    background-color: darken($contentColor, 1%);
    box-shadow: -1em 0 2em inset darken($contentColor, 10%);
    border-left:solid 1px $thirdColor;
    border-bottom:solid 1px $thirdColor;
    border-bottom-left-radius: $containerBorderRadius;
    padding: 10px;
    .navItem {
      > a {
        @include transition(color, background-color linear 0.3s);
        padding: 2px 10px;
        &:hover, &:focus {
          background-color: #E0DDDD;
        }
      }
    }
    .navLevel2, .navLevel3{margin-left:$space/2;}
  }
  .logo {
    max-width: 100%;
    max-height:120px;
  }
  .logoContainer{
    padding-top: $space;
    height:$bannerHeight;
  }
  .logoContainer, >.navigation {
    padding-left: $space / 2;
  }
}


.rightPane {
  width: $contentPaneWidth;
  @include absolute(0 0 '' $navWidth);
  .top {
    height: $space * 6;
  }
}

textarea, input[type=text], input[type=submit], input[type=number], input[type=password],  a.button, button, div.dropdown {
  border-radius: $elementBorderRadius;
}
a.button{
  color: $firstColor;
  &:hover{
    color: $lightFontColor;
  }
}
ul.dropdownList{
  border-bottom-left-radius: $elementBorderRadius;
  border-bottom-right-radius: $elementBorderRadius;
  margin-top: -3px;
}

.tabContainer {
  .tabs {
    > .tab {
      height: 32px;
      background-color: #ECECEC;
      padding-top: 5px;
      &:first-child {
        border-top-left-radius: $containerBorderRadius;
      }
      &:last-child {
        border-top-right-radius: $containerBorderRadius;
      }
      bottom: -1px;

      &:hover, &:focus {
        padding-top: 5px;
        bottom: 0;
        background-color: #f9f9f9;
        outline: none;
        box-shadow: 0px -1px 1px #000;
        &.active {
        }
      }
      &.active {
        bottom: 0px;
        height: 35px;
        margin-bottom: -3px;
        background-color: #f9f9f9;
      }
      margin-right: -1px;
    }
  }

  > .container {
    border-bottom-left-radius: $containerBorderRadius;
    border-bottom-right-radius: $containerBorderRadius;
    border-top-right-radius: $containerBorderRadius;
  }
}

.contentPane {
  > .content {
    min-height: 600px;
    position: relative;
    padding: $space;
    background: lighten($contentColor, 2%);
    border-radius: $containerBorderRadius;
    .tabContainer, .containerExchange {
      margin-bottom: $space;
    }

    form {

      &:after{
        content: "";
        display: block;
        visibility: hidden;
        clear: both;
      }

      label.labelInput {
        margin: 0;
      }
      .dropdown{
        width: 100%;
      }
      .inputWrapper{
        display: block;
        textarea,
        input[type="password"],
        input[type="number"],
        input[type="email"],
        input[type="text"]{
          width: 100%;
        }
      }
      select[multiple="multiple"]{
        width: 100%;
        margin-bottom: 10px;
      }

      input[type='submit']{
        min-width: 20px;
      }
    }

    .button-group {
      text-align: right;
      margin: $space 0;
    }

    border: {
      top: solid 1px $secondColor;
      left: solid 1px $thirdColor;
      right: solid 1px $thirdColor;
      bottom: solid 5px $thirdColor;
    }
  }
}

.secureElement.has:before {
  color: $buttonCriticalSecondColor;
  font-weight: bold;
}

label[for^="inputFilter"] {
  &.labelInput {
    margin: 0 1em 0 0;
  }
  /** FOM templates like to add .left for no particular reason, defeat that */
  &.left {
    float: none;
  }
}

.listFilterInput.left {
  /** FOM templates like to add .left for no particular reason, defeat that */
  float: none;
}

// Temporary hacks to circumvent FOM markup expecting a margin-bottom on the listFilterInput
// All occurrences of listFilterInput in FOM markup are preceded by a table, either immediately, or
// with a (redundant) div.clearContainer between them
.listFilterInput ~ table {
  margin-top: 1.5 * $space;
}


#addElmPermission {
  // Link is outside of element permission markup, but want to display as an ~overlay top right
  position: relative;
  top: 30px;
  // following (default!) collection add interaction doesn't work for Element permissions, and should also
  // not be displayed
  & + form {
    .collectionAdd, .labelInput.required {
      display: none;
    }
  }
}

.permissionsTable{
  tr {
    border-bottom: solid 1px darken($contentColor, 10%);
    &.new{
      td:first-child {
        color: green;
      }
      background-color: #f0ffed;
    }

  }
  tbody .labelInput {
    // Undo .labelInput completely; @todo: fix FOM markup to not use labelInput
    margin: 0;
    display: initial;
    color: inherit;
  }

  th, td {
    padding:5px 0;
  }
  td{
    .input{display:none;}
    .iconGroup:before, .iconUser:before{
      display: inline-block;
      text-align: center;
      width: 1.5em;
    }
  }
  .tagbox {
    font-size: 85%;
    cursor: pointer;
    width: auto;
    text-align: center;
    padding: 3px .5em;
    margin: 0 .25em;
    display: inline-block;  // match .checkWrapper in body; @todo: fix markup in FOM
    @include noUserSelect;
    @include border-radius($radius);
    &.multi {
      background-color:#c1c1c1;
    }

    &.active {
      color:white;
      &.view {
        background-color: #8DCA35;
      }
      &.edit, &.delete, &.create {
        background-color: #FFAB00;
      }
      &.operator, &.master, &.owner {
        background-color: #FF702A;
      }
    }
    input {
      display: none;
    }
  }
}
#elementSecurity {
  // Prevent sizeless collection add icon from overflowing the sized content
  // @todo: fix icon integration in FOM
  min-height: 150px;
  .permissionsTable {
    thead th:last-child {
      // Expand cell to contain the sizeless collection add icon
      // @todo: fix icon integration in FOM
      min-width: 32px;
    }
  }
}

.tableGroupsAndUsers{
  border:{
    top:solid 3px $firstColor;
    left:solid 1px $thirdColor;
    right:solid 1px $thirdColor;
    bottom:solid 1px $thirdColor;
  }
  @include border-bottom-radius($radius);
}
