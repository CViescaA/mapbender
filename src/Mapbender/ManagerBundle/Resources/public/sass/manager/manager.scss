/* Backend styles include used by main backend and login */

@import "modules/base";
@import "modules/text";
@import "modules/layout";
@import "modules/popup";
@import "modules/input";
@import "modules/button";
@import "modules/container";
@import "modules/dropdown";
@import "modules/table";
@import "element/mbslider";


@import url("components/open-sans/open-sans.css");
@import url("components/bootstrap/css/bootstrap.min.css");
@import url("https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,700;1,500#standard-styles");


.navigationBar {
  font-size: 1.25rem;
  background-color: rgba(255, 255, 255, 1);
  box-shadow: 0 1px 8px rgba(191, 191, 191, 0.5);

  .navbar-brand {
    // Reduce top/bottom padding on Bootstrap .navbar-brand (default 15px) to show the logo a bit larger
    padding-top: 5px;
    padding-bottom: 5px;
    // For .logo's vertical alignment to work, it needs an inline-block sibling element with full height
    // see https://stackoverflow.com/a/7310398
    &:before {
      content: "";
      display: inline-block;
      vertical-align: middle;
      height: 100%;
    }
  }
  .logo {
    max-width: 120px;
    max-height: 100%;
  }
  .navbar-brand>img.logo {
    display: inline-block;  // revert Bootstrap default block on .navbar-brand>img to allow vertical-align to take effect
  }
}

.navigationBar .navbar-nav ul.nav {
  width: 15em;
  background-color: #efefef;
  position: absolute;
  z-index: 5;
  top: 100%;
  font-weight: 300;
}

.navigationBar .nav > li > ul.nav {
  display: none;
  padding: 20px;
}

.navigationBar .nav > li:hover > ul.nav {
  display: block;
}

div.contentTitle {
  // remove h1 margin, put it on the containing div instead
  margin-bottom: 2rem;
  > h1 {
    margin: 0;
  }
  // @todo: allow regular paragraph text flow ... everywhere?
  > p {
    margin: 0.5em 0;
  }
  > p {
    font-size: 1.5rem;
  }
  .badge {
    padding: 1em 0.8750em;
    margin-bottom: 1em;
    font-size: 1em;
    font-weight: 400;
    background-color:#EBE8E8;
  }
}

:not(.popup) .contentTitle {
  // Undo dashed border (rule is for frontend and for popups only)
  border-bottom: none;
}


.popupContainer,
.page{
  position:relative;
}
.iconBig, .iconSmall {
  // Add highlights for legacy markup (.iconSmall = no other rules, FOM only)
  &:before {
    @extend .hover-highlight-effect;
  }
}

.notifyjs-corner {
  z-index: 100000 !important;
}

.sitelinks {
  &.list-inline li:not(:first-child):before {
    content: "|";
    margin-left: -5px;
    margin-right: 5px;
  }
}

textarea, input[type=text], input[type=submit], input[type=number], input[type=password],  a.button, button, div.dropdown {
  border-radius: $elementBorderRadius;
}
a.button{
  color: $firstColor;
  &:hover{
    color: $lightFontColor;
  }
}
ul.dropdownList{
  border-bottom-left-radius: $elementBorderRadius;
  border-bottom-right-radius: $elementBorderRadius;
  margin-top: -3px;
}

.tabContainer {
  .tabs {
    > .tab {
      background-color: #ECECEC;
      &:first-child {
        border-top-left-radius: $containerBorderRadius;
      }
      &:last-child {
        border-top-right-radius: $containerBorderRadius;
      }
      &:hover, &:focus, &.active {
        background-color: #f9f9f9;
      }
      &:hover, &:focus {
        outline: none;
        box-shadow: 0px -1px 1px #000;
      }
    }
  }

  > .container {
    border-bottom-left-radius: $containerBorderRadius;
    border-bottom-right-radius: $containerBorderRadius;
    border-top-right-radius: $containerBorderRadius;
  }
}

.contentPane {
  > .content {
    min-height: 600px;
    .tabContainer {
      margin-bottom: $space;
    }

    form {
      &:after{
        content: "";
        display: block;
        visibility: hidden;
        clear: both;
      }
    }

    .button-group {
      text-align: right;
      margin: $space 0;
    }
  }
  .form-container {
    border: 1px solid #c0c0c0;
    background-color: #f9f9f9;
    padding: 20px;
    .button-group:last-child {
      margin-bottom: 0;
    }
  }
}

.filter-group {
  th & {
    margin-bottom: 0;
    max-width: initial;
  }
  label {
    width: auto;
    min-width: 80px;
    margin: 0 1em 0 0;
  }
  .inputWrapper, >input {
    width: 200px;
    max-width: calc(100% - 120px);  // for crowded table rows with filter embedded into a th
  }
  .inputWrapper {
    display: inline-block;
  }
}

#listFilterPermission {
  // following (default!) collection add interaction doesn't work for Element permissions, and should also
  // not be displayed
  & ~ * .collectionAdd {
    display: none;
  }
  & + form {
    .collectionAdd, .labelInput.required {
      display: none;
    }
  }
}

.permissionsTable{
  tr{
    &.new{
      td:first-child {
        color: green;
      }
      background-color: #f0ffed;
    }
  }
  .tagbox {
    display: inline-block;
    font-size: 85%;
    cursor: pointer;
    width: auto;
    text-align: center;
    padding: 3px .5em;
    margin: 0 .25em;
    @include noUserSelect;
    @include border-radius($radius);
    input {
      display: none;
    }
    &.multi {
      background-color:#c1c1c1;
    }

    &.active {
      color:white;
      &.view {
        background-color: #8DCA35;
      }
      &.edit, &.delete, &.create {
        background-color: #FFAB00;
      }
      &.operator, &.master, &.owner {
        background-color: #FF702A;
      }
    }
  }
}

.popover {
  font-size: inherit;
}
.popup .table {
  background-color: white;
}
